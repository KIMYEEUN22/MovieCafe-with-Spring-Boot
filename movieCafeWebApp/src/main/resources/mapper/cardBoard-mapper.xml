<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cardBoard">

	<!-- 카드게시판 목록 조회 -->
	<resultMap type="cardboardVO" id="cardBoardSelectList">
		<result property="boardNo" javaType="int" column="boardNo" jdbcType="INTEGER" />
		<result property="userNick" javaType="string" column="userNick" jdbcType="VARCHAR" />
		<result property="horse" javaType="string" column="horse" jdbcType="VARCHAR" />
		<result property="boardContent" javaType="string" column="boardContent" jdbcType="VARCHAR" />
		<result property="boardTitle" javaType="string" column="boardTitle" jdbcType="VARCHAR" />
		<result property="boardWdate" javaType="string" column="boardWdate" jdbcType="VARCHAR" />
		<result property="commentCount" javaType="int" column="commentCount" jdbcType="INTEGER" />
	</resultMap>
	
	<!-- 게시글 목록조회 -->
	<select id="selectCardBoardList" statementType="STATEMENT" resultMap="cardBoardSelectList">

		SELECT b.boardNo, b.boardTitle,b.boardContent, h.horse, u.userNick, DATE_FORMAT(b.boardWdate, '%Y-%m-%d') as boardWdate, b.boardCount
		FROM board as b left join user_info as u using(userId) left join horse as h using(horseNo)
		where h.cateNo = 2
		ORDER BY b.boardWdate DESC;
		
	</select>
	
	<!-- 게시글 상세조회 -->
	<select id="selectCardBoard" parameterType="int" resultMap="cardBoardSelectList">
	
		SELECT b.boardNo, b.boardTitle,b.boardContent, b.userId,  h.horse, u.userNick, DATE_FORMAT(b.boardWdate, '%Y-%m-%d') as boardWdate, b.boardCount
		FROM board as b left join user_info as u using(userId) left join horse as h using(horseNo)
		where b.boardNo = #{boardNo}

	</select>
	
	
	<insert id="insertCardBoard" parameterType="hashMap" useGeneratedKeys="true" keyProperty="boardNo">
		
		INSERT INTO board (userId, boardTitle, boardContent, horseNo)
		VALUES (#{userId}, #{boardTitle}, #{boardContent}, #{horseNo})
	
	</insert>
	
	<update id="updateBoardCount" parameterType="int">
	
	UPDATE board
	SET boardCount = boardCount + 1
	WHERE boardNo = #{boardNo};
	
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteCardBoard" parameterType="int">
	
	DELETE FROM board
	WHERE boardNo = ${boardNo}
	
	</delete>
	
	<update id="modifyCardBoard" parameterType="hashMap">
	
	UPDATE board
	SET boardTitle = #{boardTitle}, boardContent = #{boardContent}, horseNo = #{horseNo}
	WHERE boardNo = #{boardNo}
	
	</update>
	
	<!-- 게시글 파일 등록 -->
	<insert id="insertCardBoardFile" parameterType="hashMap">
	
	INSERT INTO boardfile (boardNo, boardfileOrigin, boardfileSys, boardfileSize)
	VALUES (#{boardNo}, #{boardfileOrigin}, #{boardfileSys}, #{boardfileSize})
	
	</insert>
	
	<!--  BoardFileVo resultmap -->
	<resultMap type="BoardFileVO" id="BoardFileList">
	<result property="boardfileNo" javaType="int" column="boardfileNo" jdbcType="INTEGER"/>
	<result property="boardfileOrigin" javaType="string" column="boardfileOrigin" jdbcType="VARCHAR"/>
	<result property="boardfileSys" javaType="string" column="boardfileSys" jdbcType="VARCHAR"/>
	<result property="boardNo" javaType="int" column="boardNo" jdbcType="INTEGER"/>
	</resultMap>
	
	
	<!-- 파일이 있는 게시글 가져오기 -->
	<select id="selectboardFileList" resultMap="BoardFileList">
	
	SELECT f.boardfileOrigin, f.boardfileSys, f.boardNo
	FROM board AS b JOIN boardfile AS f USING(boardNo) JOIN horse AS h USING(horseNo)
	WHERE h.cateNo = 2
	
	</select>
	
	<!-- 게시판 파일 정보 가져오기 -->
	<select id="selectBoardFile" parameterType="int" resultMap="BoardFileList">
	
	SELECT boardfileNo, boardfileOrigin, boardfileSys, boardNo
	FROM boardfile
	WHERE boardNo = #{boardNo}
	
	</select>	
	
	</mapper>
